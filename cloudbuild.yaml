# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'node'
    args: ['--version']

  # Docker Build :$SHORT_SHA
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [
        '-c',
        'docker build --build-arg MYSECRET=$$MYSECRET --build-arg MONGO_HOST=$$MONGO_HOST --build-arg MONGO_USERNAME=$$MONGO_USERNAME --build-arg MONGO_PASSWORD=$$MONGO_PASSWORD -t gcr.io/coworkout-20230409/github.com/benxgao/coworkout-run:$SHORT_SHA .',
        # '--build-arg',
        # 'MYSECRET=$$MYSECRET',
        # '-t',
        # 'gcr.io/coworkout-20230409/github.com/benxgao/coworkout-run:$SHORT_SHA',
        # '.',
      ]
    secretEnv: ['MYSECRET', 'MONGO_HOST', 'MONGO_USERNAME', 'MONGO_PASSWORD']

  # Docker Push :$SHORT_SHA
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['push', 'gcr.io/coworkout-20230409/github.com/benxgao/coworkout-run:$SHORT_SHA']

    # Entrypoint, timeout and environment variables
    # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    #   entrypoint: 'gcloud'
    #   timeout: 240s
    #   args:
    #     [
    #       'compute',
    #       'instances',
    #       'create-with-container',
    #       'my-vm-name',
    #       '--container-image',
    #       'gcr.io/coworkout-20230409/github.com/benxgao/coworkout-run:$SHORT_SHA',
    #     ]
    #   env:
    #     - 'CLOUDSDK_COMPUTE_REGION=us-central1'
    #     - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'

    #
    # substitutions:
    #   SUB_VALUE: world

source:
  git_source:
    url: 'https://github.com/benxgao/coworkout-run'
    dir: '.'
    revision: 'refs/heads/main'

availableSecrets:
  secretManager:
    - versionName: projects/720803368237/secrets/MYSECRET/versions/latest
      env: 'MYSECRET'
    - versionName: projects/720803368237/secrets/MONGO_HOST/versions/latest
      env: 'MONGO_HOST'
    - versionName: projects/720803368237/secrets/MONGO_USERNAME/versions/latest
      env: 'MONGO_USERNAME'
    - versionName: projects/720803368237/secrets/MONGO_PASSWORD/versions/latest
      env: 'MONGO_PASSWORD'
# steps:
# - name: string
#   args: [string, string, ...]
#   env: [string, string, ...]
#   allowFailure: boolean
#   allowExitCodes: [string (int64 format), string (int64 format), ...]
#   dir: string
#   id: string
#   waitFor: [string, string, ...]
#   entrypoint: string
#   secretEnv: string
#   volumes: object(Volume)
#   timeout: string (Duration format)
#   script: string
# - name: string
#   ...
# - name: string
#   ...
# timeout: string (Duration format)
# queueTtl: string (Duration format)
# logsBucket: string
# source:
#   gitSource:
#     url: string
#     dir: string
#     revision: string
# options:
#  env: [string, string, ...]
#  secretEnv: string
#  volumes: object(Volume)
#  sourceProvenanceHash: enum(HashType)
#  machineType: enum(MachineType)
#  diskSizeGb: string (int64 format)
#  substitutionOption: enum(SubstitutionOption)
#  dynamicSubstitutions: boolean
#  logStreamingOption: enum(LogStreamingOption)
#  logging: enum(LoggingMode)
#  defaultLogsBucketBehavior: enum(DefaultLogsBucketBehavior)
#  pool: object(PoolOption)
#  requestedVerifyOption: enum(RequestedVerifyOption)
# substitutions: map (key: string, value: string)
# tags: [string, string, ...]
# serviceAccount: string
# secrets: object(Secret)
# availableSecrets: object(Secrets)
# artifacts: object(Artifacts)
#   mavenArtifacts: [object(MavenArtifact), ...]
#   pythonPackages: [object(PythonPackage), ...]
# images:
# - [string, string, ...]

